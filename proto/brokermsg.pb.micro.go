// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: brokermsg.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for BrokerMsg service

type BrokerMsgService interface {
	Order(ctx context.Context, in *BrokerMsgReq, opts ...client.CallOption) (*BrokerMsgRsp, error)
}

type brokerMsgService struct {
	c    client.Client
	name string
}

func NewBrokerMsgService(name string, c client.Client) BrokerMsgService {
	return &brokerMsgService{
		c:    c,
		name: name,
	}
}

func (c *brokerMsgService) Order(ctx context.Context, in *BrokerMsgReq, opts ...client.CallOption) (*BrokerMsgRsp, error) {
	req := c.c.NewRequest(c.name, "BrokerMsg.Order", in)
	out := new(BrokerMsgRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BrokerMsg service

type BrokerMsgHandler interface {
	Order(context.Context, *BrokerMsgReq, *BrokerMsgRsp) error
}

func RegisterBrokerMsgHandler(s server.Server, hdlr BrokerMsgHandler, opts ...server.HandlerOption) error {
	type brokerMsg interface {
		Order(ctx context.Context, in *BrokerMsgReq, out *BrokerMsgRsp) error
	}
	type BrokerMsg struct {
		brokerMsg
	}
	h := &brokerMsgHandler{hdlr}
	return s.Handle(s.NewHandler(&BrokerMsg{h}, opts...))
}

type brokerMsgHandler struct {
	BrokerMsgHandler
}

func (h *brokerMsgHandler) Order(ctx context.Context, in *BrokerMsgReq, out *BrokerMsgRsp) error {
	return h.BrokerMsgHandler.Order(ctx, in, out)
}
