// Code generated by protoc-gen-go. DO NOT EDIT.
// source: brokermsg.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BrokerMsgReq struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerMsgReq) Reset()         { *m = BrokerMsgReq{} }
func (m *BrokerMsgReq) String() string { return proto.CompactTextString(m) }
func (*BrokerMsgReq) ProtoMessage()    {}
func (*BrokerMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3518cfe557a7b1c, []int{0}
}

func (m *BrokerMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerMsgReq.Unmarshal(m, b)
}
func (m *BrokerMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerMsgReq.Marshal(b, m, deterministic)
}
func (m *BrokerMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerMsgReq.Merge(m, src)
}
func (m *BrokerMsgReq) XXX_Size() int {
	return xxx_messageInfo_BrokerMsgReq.Size(m)
}
func (m *BrokerMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerMsgReq proto.InternalMessageInfo

func (m *BrokerMsgReq) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type BrokerMsgRsp struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerMsgRsp) Reset()         { *m = BrokerMsgRsp{} }
func (m *BrokerMsgRsp) String() string { return proto.CompactTextString(m) }
func (*BrokerMsgRsp) ProtoMessage()    {}
func (*BrokerMsgRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3518cfe557a7b1c, []int{1}
}

func (m *BrokerMsgRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerMsgRsp.Unmarshal(m, b)
}
func (m *BrokerMsgRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerMsgRsp.Marshal(b, m, deterministic)
}
func (m *BrokerMsgRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerMsgRsp.Merge(m, src)
}
func (m *BrokerMsgRsp) XXX_Size() int {
	return xxx_messageInfo_BrokerMsgRsp.Size(m)
}
func (m *BrokerMsgRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerMsgRsp.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerMsgRsp proto.InternalMessageInfo

func (m *BrokerMsgRsp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*BrokerMsgReq)(nil), "proto.BrokerMsgReq")
	proto.RegisterType((*BrokerMsgRsp)(nil), "proto.BrokerMsgRsp")
}

func init() {
	proto.RegisterFile("brokermsg.proto", fileDescriptor_c3518cfe557a7b1c)
}

var fileDescriptor_c3518cfe557a7b1c = []byte{
	// 118 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x2a, 0xca, 0xcf,
	0x4e, 0x2d, 0xca, 0x2d, 0x4e, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a,
	0x1a, 0x5c, 0x3c, 0x4e, 0x60, 0x19, 0xdf, 0xe2, 0xf4, 0xa0, 0xd4, 0x42, 0x21, 0x09, 0x2e, 0xf6,
	0xdc, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x18, 0x17,
	0x55, 0x65, 0x71, 0x01, 0x6e, 0x95, 0x46, 0x0e, 0x5c, 0x9c, 0x70, 0x95, 0x42, 0xc6, 0x5c, 0xac,
	0xfe, 0x45, 0x29, 0xa9, 0x45, 0x42, 0xc2, 0x10, 0x8b, 0xf5, 0x90, 0xad, 0x93, 0xc2, 0x14, 0x2c,
	0x2e, 0x50, 0x62, 0x48, 0x62, 0x03, 0x8b, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xa7,
	0xc0, 0x98, 0xb6, 0x00, 0x00, 0x00,
}
