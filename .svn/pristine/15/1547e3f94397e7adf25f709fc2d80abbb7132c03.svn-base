package backend

import (
	"context"
	"crypto/md5"
	"encoding/hex"
	"github.com/app"
	"github.com/gin-gonic/gin"
	"github.com/micro/go-micro/v2"
	"github.com/models"
	"github.com/proto"
	"net/http"
	"time"
)

type ApiAdmins struct{}

func (api *ApiAdmins) Login(ctx *gin.Context) {
	var params struct {
		Username string
		Password string
	}
	err := ctx.BindJSON(&params)
	if err != nil {
		app.ResponseError(ctx, err)
		return
	}

	// 数据库校验密码
	hash := md5.New()
	hash.Write([]byte(params.Password))
	passwordHash := hex.EncodeToString(hash.Sum(nil))
	user := &models.Admin{}
	res := models.DB.Model(&models.Admin{}).Where("username=? and password=?", params.Username, passwordHash).First(user)
	if res.Error != nil {
		app.ResponseError(ctx, res.Error)
		return
	}

	service := micro.NewService(
		micro.Registry(app.EtcdRegistry()),
	)
	service.Init()

	// JWT 生成Token
	jwt := proto.NewJwtService("jwt", service.Client())
	rsp, err := jwt.Encode(context.TODO(), &proto.JwtEncodeRequest{
		User: &proto.JwtUser{
			Id:        int32(*user.ID),
			Username:  *user.Username,
			Nickname:  *user.Nickname,
			LoginTime: time.Now().Unix(),
		},
	})
	if err != nil {
		app.ResponseError(ctx, err)
		return
	}

	ctx.JSON(http.StatusOK, gin.H{
		"code":    0,
		"message": "登录成功",
		"token":   rsp.Token,
	})
}
